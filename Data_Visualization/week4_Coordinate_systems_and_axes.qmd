---
title: "Coordinate systems and axes"
author: "Hyunsoo Kim"
date: "2022-03-29"
categories: [Visualization, Code, R]
page-layout: full
image: "./image/coord_polar.png"
output:
  prettydoc::html_pretty:
    theme: architect
    highlight: github
editor_options: 
  chunk_output_type: console
mainfont: NanumGothic
---

```{r setup, include = FALSE}
knitr::opts_chunk$set(
    echo = TRUE,
    collapse = TRUE,
    comment = "#>"
)
getwd()
library(tidyverse)
```

# 3. Coordinate systems and axes

```{r}
# Read csv File
ncdc_normals <- read.csv("C:/Users/Hyunsoo Kim/Desktop/senior_grade/blog/my-quarto-website/Data_Visualization/data/ncdc_normals.csv")

# station_loc Dataframe 생성
station_loc <- data.frame(
    station_id = c("USW00014819", "USC00042319", "USW00093107", "USW00012918"),
    location = c("Chicago", "Death Valley", "San Diego", "Houston")
)
station_loc

# Raw Data와 Inner Join
temps_long <- ncdc_normals %>% inner_join(station_loc, by = "station_id")
temps_long %>% head()
temps_long %>% sapply(class)

# Date Type Convert : Character -> Date
temps_long$date <- temps_long$date %>% as.Date("%Y-%m-%d")
```

## Figure 3.2

```{r}
# Arrange multiple plots into a grid
library(cowplot) # plot_grid()

# data_Houston 데이터프레임 생성
data_Houston <- temps_long %>% filter(location == "Houston")
data_Houston %>% head()

ggplot(data_Houston, aes(x = date, y = temperature)) +
    geom_line(linewidth = 1, color = "royalblue")

# X축에 표시할 눈금
date_s <- "0000-01-01" %>% as.Date("%Y-%m-%d")
date_e <- "0001-01-01" %>% as.Date("%Y-%m-%d")
break_date <- seq.Date(date_s, date_e, by = "3 month") # 3달 간격 Date 생성

# ggplot + 축 생성
temp_plot <- ggplot(data_Houston, aes(x = date, y = temperature)) +
    geom_line(linewidth = 1, color = "royalblue") +
    scale_x_date(
        name = "month", breaks = break_date,
        labels = c("Jan", "Apr", "Jul", "Oct", "Jan")
    ) +
    scale_y_continuous(name = "temp") + # limits = c(0, 100) -> y 범위 지정
    # labs(title = 'Fig. 2.3', subtitle = 'Daily temperature normals') +
    theme_light()
temp_plot
```

```{r}
# 2 subplots
plot_ab <- plot_grid(temp_plot, temp_plot,
    nrow = 1, rel_widths = c(1, 2), labels = c("a", "b")
)
plot_ab
```

```{r}
# 3 subplots
plot_abc <- plot_grid(plot_ab, temp_plot,
    ncol = 1, rel_widths = c(1, 5, 1), labels = c("", "c")
)
plot_abc
```

## Figure 3.5 \~ 3.6

```{r}
library(ggrepel) # geom_text_repel()

# Read csv File
Us_census <- read.csv("C:/Users/Hyunsoo Kim/Desktop/senior_grade/blog/my-quarto-website/Data_Visualization/data/US_census.csv")
Us_census %>% head(2)

tx_counties <- Us_census %>%
    filter(state == "Texas") %>% # Texas 주만 추출
    select(name, pop2010) %>% # name과 pop2010 열만 추출
    mutate(
        county = gsub(" County", "", name), # " County" 제거하여 county 열 생성
        popratio = pop2010 / median(pop2010)
    ) %>% # pop2010을 중앙값으로 나누어 비율 생성
    arrange(desc(popratio)) %>% # 내림차순으로 정렬
    mutate(
        index = 1:n(), # index 열 생성
        label = ifelse(index <= 3 | index > n() - 3 | runif(n()) < .04, county, "")
    )
# index 기준으로 상위 3위와 하위 3위인 열만 label을 지정
tx_counties %>% head()
```

```{r}
# Figure 3.6
ggplot(tx_counties, aes(x = index, y = popratio)) +
    geom_hline(yintercept = 0, linetype = 2, color = "grey40") +
    geom_point(size = 1, color = "royalblue") +
    geom_text_repel(aes(label = label),
        min.segment.length = 0,
        max.overlaps = 100
    ) +
    theme_light() +
    theme(panel.border = element_blank())
```

```{r}
# Figure 3.5
label_log10 <- sapply(-2:2, function(i) as.expression(bquote(10^.(i))))

ggplot(tx_counties, aes(x = index, y = popratio)) +
    geom_hline(yintercept = 0, linetype = 2, color = "grey40") + # 수평선 생성 (yintercept : y절편)
    geom_point(size = 1, color = "royalblue") +
    geom_text_repel(aes(label = label),
        min.segment.length = 0, # label을 표시하기 위해 연결해야하는 최소한의 선분 길이
        max.overlaps = 100
    ) + # label 간의 최대 겹침 횟수
    scale_y_log10(
        name = "population number / median",
        breaks = 10^(-2:2),
        labels = label_log10
    ) +
    scale_x_continuous(
        name = "Texas counties, from most to leas populous",
        breaks = NULL
    ) +
    theme_light() +
    theme(panel.border = element_blank())
```

## 예제 - 시군구 인구수 2023년

```{r}
data_202202 <- read.csv("C:/Users/Hyunsoo Kim/Desktop/senior_grade/blog/my-quarto-website/Data_Visualization/data/행정구역_시군구_별_주민등록세대수_202302.csv", encoding = "UTF-8")
data_202202 %>% head()

kor_census <- data_202202 %>%
    filter(X2023.02 > 0) %>%
    mutate(popratio = X2023.02 / median(X2023.02)) %>%
    arrange(popratio %>% desc()) %>%
    mutate(index = 1:n(), label = ifelse(index <= 5 | index > n() - 5 | index == median(index), 행정구역.시군구.별, ""))

label_log10 <- sapply(-2:2, function(i) as.expression(bquote(10^.(i))))

ggplot(kor_census, aes(x = index, y = popratio)) +
    geom_hline(yintercept = 1, linetype = 2, color = "grey40") +
    geom_point(size = 1, color = "royalblue") +
    geom_text_repel(aes(label = label),
        min.segment.length = 0,
        max.overlaps = 100
    ) +
    scale_y_log10(
        name = "인구 수 / 중위 수",
        breaks = 10^(-2:2),
        labels = label_log10,
        limits = c(10^-1.3, 10^1.3)
    ) +
    scale_x_discrete(
        name = "행정구역(시군구)별 주민등록세대수",
        breaks = NULL
    ) +
    theme_light() +
    theme(panel.border = element_blank())
```

## Figure 3.10

```{r}
# X축에 표시할 눈금
date_s <- "0000-01-01" %>% as.Date("%Y-%m-%d")
date_e <- "0001-01-01" %>% as.Date("%Y-%m-%d")
break_date <- seq.Date(date_s, date_e, by = "3 month") # 3달 간격 Date 생성
data_lab <- format(break_date, "%B")

ggplot(temps_long, aes(x = date, y = temperature, color = location)) +
    geom_line(linewidth = 1.2) +
    scale_x_date(name = "month", breaks = break_date, labels = data_lab) +
    scale_y_continuous(name = "temperature", limits = c(0, 105)) +
    coord_polar(theta = "x", start = pi, direction = -1) + # 6시 위치에서 반시계 방향
    # coord_polar(theta = "x", start = 0, direction = 1) +    # 12시 위치에서 반시계 방향
    theme_light() +
    theme(panel.border = element_blank())
```

## 예제 - 기상청 자료 2022년

```{r}
# Read csv File
data_2022 <- read.csv("C:/Users/Hyunsoo Kim/Desktop/senior_grade/blog/my-quarto-website/Data_Visualization/data/OBS_ASOS_DD_20230322080932.csv", fileEncoding = "CP949")

# '대전', '서울', '세종', '제주'만 추출
data_2022 <- data_2022 %>% filter(지점명 %in% c("대전", "서울", "세종", "제주"))
data_2022$지점명 %>% unique()

# Date Type Convert : Character -> Date
data_2022$일시 <- data_2022$일시 %>% as.Date("%Y-%m-%d")
data_2022 %>% sapply(class)

# X축 눈금 지정
date_s <- "2022-01-01" %>% as.Date("%Y-%m-%d")
date_e <- "2023-01-01" %>% as.Date("%Y-%m-%d")
break_date <- seq.Date(date_s, date_e, by = "2 month") # 2달 간격 Date 생성
data_lab <- format(break_date, "%B")

ggplot(data_2022, aes(x = 일시, y = 평균기온..C., color = 지점명)) +
    geom_line(linewidth = 1.2) +
    scale_x_date(name = "월", breaks = break_date, labels = data_lab) +
    scale_y_continuous(name = "평균기온", limits = c(-20, 30)) +
    coord_polar(theta = "x", start = pi, direction = -1) + # 6시 위치에서 반시계 방향
    theme_light() +
    theme(panel.border = element_blank())
```
