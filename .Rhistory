library(data.table)
library(mapview)
library(tmap)
library(rmapshaper)
library(grid)
library(mapdeck)
library(leaflet) # for interactive maps
library(ggplot2) # tidyverse data visualization package
library(mapdeck)
library(shiny)
library(ggmap)
library(stplanr)
library(hexbin)
library(viridis)
register_google(key = 'pk.eyJ1IjoiaHMwODEzIiwiYSI6ImNsMXlocG1zNjBjcWwzY21xdmcxOW5xMWMifQ.j084vQn3wJbJ_PEGmcNOjA')
# install.packages("ggmap")
library(ggmap)
register_google(key = 'AIzaSyB4jjrVVAzb9fl8FQrQqUONAsaRBppWuSA')
# 우리나라 지도 호출
getmap <- get_googlemap("seoul")
ggmap(getmap)
# 우리나라 지도 호출
getmap <- get_googlemap("seoul")
# unzip(zipfile="C:/202201/GIS/data/부산광역시_교통정보서비스센터 보유 ITS CCTV 현황(SHP)_20210601.zip")
busan <- read_sf(dsn = "./Spatial_Information_Analysis/tl_tracffic_cctv_info.shp", options = "ENCODING:CP949")
# unzip(zipfile="C:/202201/GIS/data/부산광역시_교통정보서비스센터 보유 ITS CCTV 현황(SHP)_20210601.zip")
busan <- read_sf(dsn = "./Spatial_Information_Analysis/tl_tracffic_cctv_info.shp", options = "ENCODING:CP949")
getmap <- get_googlemap("seoul")
busan
# unzip(zipfile="C:/202201/GIS/data/부산광역시_교통정보서비스센터 보유 ITS CCTV 현황(SHP)_20210601.zip")
busan <- read_sf(dsn = "./Spatial_Information_Analysis/tl_tracffic_cctv_info.shp", options = "ENCODING:CP949")
# unzip(zipfile="C:/202201/GIS/data/부산광역시_교통정보서비스센터 보유 ITS CCTV 현황(SHP)_20210601.zip")
#busan <- read_sf(dsn = "./Spatial_Information_Analysis/tl_tracffic_cctv_info.shp", options = "ENCODING:CP949")
busan <- read_sf(dsn = "./Spatial_Information_Analysis/tl_tracffic_cctv_info.shp", options = "ENCODING:UTF-8")
# unzip(zipfile="C:/202201/GIS/data/부산광역시_교통정보서비스센터 보유 ITS CCTV 현황(SHP)_20210601.zip")
#busan <- read_sf(dsn = "./Spatial_Information_Analysis/tl_tracffic_cctv_info.shp", options = "ENCODING:CP949")
busan <- read_sf(dsn = "./Spatial_Information_Analysis/tl_tracffic_cctv_info.shp", options = "ENCODING:UTF-8")
# unzip(zipfile = "C:/202201/GIS/data/CTPRVN_20220324.zip")
sido <- read_sf(dsn = "./Spatial_Information_Analysis/ctp_rvn.shp", options = "ENCODING:CP949")
sido
plot(sido)
library(rnaturalearth)
usa <- ne_countries(country = "United States of America") # United States borders
class(usa)
usa_sf <- st_as_sf(usa)
plot(usa_sf[1])
korea <- ne_countries(country = "South Korea") # United States borders
class(korea)
korea_sf <- st_as_sf(korea)
plot(korea_sf[1])
f <- system.file("shapes/world.gpkg", package = "spData")
world = read_sf(f, quiet = TRUE)
tanzania = read_sf(f, query = 'SELECT * FROM world WHERE name_long = "Tanzania"')
tanzania_buf = st_buffer(tanzania, 50000)
tanzania_buf_geom = st_geometry(tanzania_buf)
tanzania_buf_wkt = st_as_text(tanzania_buf_geom)
tanzania_neigh = read_sf(f, wkt_filter = tanzania_buf_wkt)
f <- system.file("shapes/world.gpkg", package = "spData")
world = read_sf(f, quiet = TRUE)
tanzania = read_sf(f, query = 'SELECT * FROM world WHERE name_long = "Tanzania"')
tanzania_buf = st_buffer(tanzania, 50000)
tanzania_buf_geom = st_geometry(tanzania_buf)
tanzania_buf_wkt = st_as_text(tanzania_buf_geom)
tanzania_neigh = read_sf(f, wkt_filter = tanzania_buf_wkt)
### 8.4 Data Input(I)
- **gpkg** 형식 불러오기
## Chapter 9 : Making maps with R
# Add fill layer to nz shape
tm_shape(nz) +
tm_fill()
# Add border layer to nz shape
tm_shape(nz) +
tm_borders()
# Add fill and border layers to nz shape
tm_shape(nz) +
tm_fill() +
tm_borders()
# Add fill layer to nz shape
tm_shape(nz) +
tm_fill()
# Add border layer to nz shape
tm_shape(nz) +
tm_borders()
# Add fill and border layers to nz shape
tm_shape(nz) +
tm_fill() +
tm_borders()
```{r tmap shape result, echo = FALSE, message = FALSE, out.width = "100%"}
knitr::include_graphics("https://r.geocompx.org/09-mapping_files/figure-html/tmshape-1.png")
map_nz <- tm_shape(nz) + tm_polygons()
class(map_nz)
map_nz
map_nz1 <- map_nz +
tm_shape(nz_elev) + tm_raster(alpha = 0.7)
nz_water <- st_union(nz) %>% st_buffer(22200) %>%
st_cast(to = "LINESTRING")
map_nz2 <- map_nz1 +
tm_shape(nz_water) + tm_lines()
map_nz3 <- map_nz2 +
tm_shape(nz_height) + tm_dots()
tmap_arrange(map_nz1, map_nz2, map_nz3)
map_nz <- tm_shape(nz) + tm_polygons()
class(map_nz)
map_nz
map_nz1 <- map_nz +
tm_shape(nz_elev) + tm_raster(alpha = 0.7)
library(sf)
library(raster)
library(spData)
library(spDataLarge)
vignette(package = "sf") # see which vignettes are available
vignette("sf1") # an introduction to the package
plot(world)
world_mini = world[1:2, 1:3]
world_mini
world_asia = world[world$continent == "Asia", ]
asia = st_union(world_asia) #아시아 국가 합치기
#아시아만 빨간색으로 표시
plot(world["pop"], reset = FALSE) #reset = FLASE이면 지도 요소를 더 추가할 수 있는 모드로 플롯을 유지
plot(asia, add = TRUE, col = "red")
```
```{r}
plot(world["continent"], reset = FALSE)
cex = sqrt(world$pop) / 10000 #pop변수에 제곱근을 취하고 1000으로 나누어서 지도 시각화를 위해 크기를 맞춤
world_cents = st_centroid(world, of_largest = TRUE) #다각형(국가별) 중앙점 계산
plot(st_geometry(world_cents), add = TRUE, cex = cex) #인구크기에 따라 대륙별 중앙점에 원그려넣기
india = world[world$name_long == "India", ]
plot(st_geometry(india), expandBB = c(0, 0.2, 0.1, 1), col = "gray", lwd = 3)
plot(world_asia[0], add = TRUE)
urb_anim <- tm_shape(world) + tm_polygons() +
tm_shape(urban_agglomerations) + tm_dots(size = "population_millions") +
tm_facets(along = "year", free.coords = FALSE)
tmap_animation(urb_anim, filename = "./Spatial_Information_Analysis/urb_anim.gif", delay = 25)
# Add fill layer to nz shape
tm_shape(nz) +
tm_fill()
# Add border layer to nz shape
tm_shape(nz) +
tm_borders()
# Add fill and border layers to nz shape
tm_shape(nz) +
tm_fill() +
tm_borders()
knitr::include_graphics("https://r.geocompx.org/09-mapping_files/figure-html/tmshape-1.png")
map_nz <- tm_shape(nz) + tm_polygons()
class(map_nz)
map_nz
map_nz1 <- map_nz +tm_shape(nz_elev) + tm_raster(alpha = 0.7)
nz_water <- st_union(nz) %>% st_buffer(22200) %>%
st_cast(to = "LINESTRING")
map_nz2 <- map_nz1 +
tm_shape(nz_water) + tm_lines()
system.file("raster/nz_elev.tif", package = "spDataLarge")
map_nz1 <- map_nz + tm_shape(nz_elev) + tm_raster(alpha = 0.7)
map_nz1 <- map_nz + tm_shape(nz_elev.tif) + tm_raster(alpha = 0.7)
nz_elev
nz_elev = rast(system.file("raster/nz_elev.tif", package = "spDataLarge"))
map_nz1 <- map_nz + tm_shape(nz_elev) + tm_raster(alpha = 0.7)
install.packages("gifski")
## 1. 대전 지역 2016 ~ 2020년 데이터 추출
daejeon <- filter(raw.data,  발생지시도 == "대전" &  발생년 > 2015)
Sys.setlocale("LC_ALL","Korean")
getwd()
raw.data <- read.csv("./Spatial_Information_Analysis/12_20_death.csv", header = TRUE, fileEncoding = "EUC-KR")
## 구조 확인
str(raw.data)
## 테이블 확인
View(raw.data)
## 1. 대전 지역 2016 ~ 2020년 데이터 추출
daejeon <- filter(raw.data,  발생지시도 == "대전" &  발생년 > 2015)
getwd()
raw.data <- read.csv("/Spatial_Information_Analysis/12_20_death.csv", header = TRUE, fileEncoding = "EUC-KR")
raw.data <- read.csv("./Spatial_Information_Analysis/12_20_death.csv", header = TRUE, fileEncoding = "EUC-KR")
## 구조 확인
str(raw.data)
raw.data <- read.csv("./Spatial_Information_Analysis/12_20_death.csv", header = TRUE, fileEncoding = "EUC-KR")
## 구조 확인
str(raw.data)
desire_lines$distance = as.numeric(st_length(desire_lines))
route_carshort = route(l = desire_carshort, route_fun = route_osrm, osrm.profile = "car")  # foot, bike, car
desire_lines$distance = as.numeric(st_length(desire_lines))
plot(st_geometry(desire_carshort))
plot(desire_carshort$geom_car, col = "red", add = TRUE)
plot(st_geometry(st_centroid(zones_od)), add = TRUE)
### 0329 - 데이터시각화
### Figure 4.1
#install.packages("remotes")
remotes::install_github("clauswilke/colorblindr",force = TRUE)
library(colorblindr)
p1<-gg_color_swatches(7) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin=margin(7,1.5,7,1.5))
p2<-gg_color_swatches(7) +
scale_fill_brewer(type="qual",palette="Dark2") + ggtitle("ColorBrewer Dark2") +
theme(plot.margin=margin(7,1.5,7,1.5))
p3<-gg_color_swatches(7) +
scale_fill_hue() + ggtitle("ggplot2 hue") +
theme(plot.margin=margin(7,1.5,7,1.5))
plot_grid(p1,p2,p3,ncol=1)
### ColorBrewer palettes
RColorBrewer::display.brewer.all()
### 그림 4.2
library(tidyverse)
load("data/US_census.rda")
load("data/US_regions.rda")
popgrowth_df<-left_join(US_census,US_regions) %>%
group_by(region,division,state) %>%
summarise(pop2000=sum(pop2000,na.rm=TRUE),
pop2010=sum(pop2010,na.rm=TRUE),
popgrowth=(pop2010-pop2000)/pop2000,
area=sum(area)) %>% #필요한 컬럼만 남기고
arrange(popgrowth) %>% #정렬
ungroup() %>% # group_by 해제
mutate(state=factor(state,levels=state),
region=factor(region,levels=c("West","South","Midwest","Northeast")))
##### 6 Visualizing amounts: 수량 데이터의 시각화
library(forcats)
library(ggplot2)
library(tidyverse)
### 6.1 Bar plots: 막대 도표의 다양한 활용용
boxoffice <- data.frame(
rank = 1:5,
title = c("Star Wars: The Last Jedi", "Jumanji: Welcome to the Jungle", "Pitch Perfect 3", "The Greatest Showman", "Ferdinand"),
title_short = c("Star Wars", "Jumanji", "Pitch Perfect 3", "Greatest Showman", "Ferdinand"),
amount = c(71565498, 36169328, 19928525, 8805843, 7316746),
amount_text = c("$71,565,498", "$36,169,328", "$19,928,525", "$8,805,843", "$7,316,746")
)
### Figure 6.1 - 세로 막대
boxoffice %>%
ggplot(aes(x=fct_reorder(title,rank),y=amount)) + #title만 x축에 넣으면 순위를 반영 못함
geom_col(fill="#56B4E9",width=0.6,alpha=0.9) + #alpha는 투명도
scale_y_continuous(expand=c(0,0),
breaks=c(0,2e7,4e7,6e7),
labels=c("0","20","40","60"),
name="weekend gross (million USD)") +
xlab("") +
theme_light() +
theme(
panel.border=element_blank(),
panel.grid.major.x=element_blank()
)
### 예제
data_age_raw<-read.csv("data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv",fileEncoding="cp949")
#0308
library(tidyverse)
#ggplot2는 결과를 그림파일로 출력(정적) - 그림이 한번나오면 편집불가
#plotly는 결과를 html파일로 출력 (동적)
#data : 시각화 자료 - 데이터프레임(벡터는 불가 오직 데이터프레임만)
#geom : 시각화 종류(도구) // geom_point()점, geom_line()선, geom_bar()막대
#aes : 시각화 특성 // 위치x,y /크기size /색상col,fill /농도alpha
#레이어 추가 : '+' 연산자를 사용하여 레이어를 추가하는 형식으로 그래프를 추가.수정함
library(ggplot2)
library(dplyr) #두개는 항상 기본옵션으로
### Dataframe
idx<-1:100
val<-rnorm(100) #정규분포에서 생성된 임의의 난수
df<-data.frame(idx,val)
df %>% head(10)
### ggplot
ggplot(df,aes(x=idx,y=val)) + geom_point()
ggplot(df) + geom_point(aes(x=idx,y=val))
ggplot(df) + geom_point(aes(x=idx,y=val),color="darkblue",size=3,alpha=0.5)
#ggplot(df,aes(x=idx,y=val)) + geom_point(color="darkblue",size=3,alpha=0.5)
ggplot(df) + geom_point(aes(x=idx,y=val),color="darkblue",size=3,alpha=0.5) +
geom_line(aes(x=idx,y=val),col="tomato3",size=3,alpha=0.5)
#ggplot(df,aes(x=idx,y=val)) + geom_point(color="darkblue",size=3,alpha=0.5) +
#geom_line(col="tomato3",size=3,alpha=0.5)
ggplot(df) + geom_point(aes(x=idx,y=val),color="darkblue",size=3,alpha=0.5) +
geom_line(aes(x=idx,y=val),col="tomato3",size=3,alpha=0.5) +
ggtitle("title") + xlab("xlab name") + ylab("ylab name")
ggplot(df) + geom_point(aes(x=idx,y=val),color="darkblue",size=3,alpha=0.5) +
geom_line(aes(x=idx,y=val),col="tomato3",size=3,alpha=0.5) +
labs(title="title",x='xlab name',y='ylab name') +
theme_bw()
ggplot(df,aes(x=idx,y=val)) + geom_point(color="darkblue",size=3,alpha=0.5) +
geom_line(col="tomato3",size=3,alpha=0.5) +
labs(title="title",x='xlab name',y='ylab name') +
theme_bw() #aes를 ggplot 안에 넣으면 코드가 훨씬 줄어들음 보통 이 방법 사용
#0310
######## introduction
### Figure 1.1
library(ggplot2)
library(dplyr)
df<-data.frame(
type = c("A","B","C"),
value = c(3,5,4)
)
ggplot(df,aes(x=type,y=value)) +
geom_bar(stat="identity") #값 자체를 그래프로 그리도록
ggplot(df,aes(x=type,y=value)) +
geom_bar(stat="identity",fill="skyblue") #fill은 사각형 채우는것,col은 선을 칠하는거
ggplot(df,aes(x=type,y=value)) +
geom_bar(stat="identity",fill="#56B4E9",width=0.65,alpha=0.9) #width 너비, alpha 농도
ggplot(df,aes(x=type,y=value)) +
geom_bar(stat="identity",fill="#56B4E9",width=0.65,alpha=0.9)+xlab("")
ggplot(df,aes(x=type,y=value)) +
geom_bar(stat="identity",fill="#56B4E9",width=0.65,alpha=0.9)+xlab("")+
theme_light() #background 조절
#정량 정성 연속 이상 범주.. 다시 구분 필요 자료의 형태 adsp 초반에 나오는 내용
getwd()
##### 2.1 데이터의 미학과 유형
### 그림 2.1
?shape
# A look at all 26 symbols
df2<-data.frame(x=1:5,y=1:25,z=1:25)
df2[26,]<-0
### shape
p<-ggplot(df2,aes(x,y))
p + geom_point(aes(shape=z),
size=5,colour="Red",
fill="Blue")+
scale_shape_identity()+
theme_void() #아무것도 출력하지 않는(x,y축)
#테두리 빨강 속은 파랑
### size
p + geom_point(aes(size=z),
shape=21,colour="Red",
fill="Blue")+
scale_shape_identity()+
theme_void()
### color
colors() #R에서 사용할수있는 색상이 나옴
fn_colors_plot <- function(color_start=1, col=5, line=20){
# Empty chart
plot(0, 0, type = "n", xlim = c(0, 1), ylim = c(0, 1), axes = FALSE, xlab = "", ylab = "")
# Add color background
rect(
rep((0:(col - 1)/col),line) ,
sort(rep((0:(line - 1)/line),col),decreasing=T),
rep((1:col/col),line) ,
sort(rep((1:line/line),col),decreasing=T),
border = "white" ,
col=colors()[seq(1,line*col)+color_start-1])
# Color names
text(
rep((0:(col - 1)/col),line)+0.1 ,
sort(rep((0:(line - 1)/line),col),decreasing=T)+0.015 ,
colors()[seq(1,line*col)+color_start-1]  ,
cex=1)
}
fn_colors_plot(100) #n번쨰부터 색깔을 보여줌
### line type: 0=blank,1=solid,2=dashed,3=dotted,4=dotdash,
#5=longdash,6=twodash
p<-ggplot(data.frame())
p+geom_hline(linetype=1,yintercept = 5,size=3)+
geom_hline(linetype=2,yintercept = 10,size=3)+
geom_hline(linetype=3,yintercept = 15,size=3)+
geom_hline(linetype=4,yintercept = 20,size=3)+
geom_hline(linetype=5,yintercept = 25,size=3)+
geom_hline(linetype=6,yintercept = 30,size=3)+
theme_void()
df<-data.frame(y=0:6,z=0:6)
ggplot(df)+
geom_hline(aes(linetype=z,yintercept = z),size=3)+
scale_linetype_identity()+
ylab("linetype")+
theme_bw()
##### 2.2 Scales map data values onto aesthetics
### Figure 2.3
load(file.choose())
### 0329 - 데이터시각화
### Figure 4.1
#install.packages("remotes")
remotes::install_github("clauswilke/colorblindr",force = TRUE)
p1<-gg_color_swatches(7) +
scale_fill_OkabeIto() + ggtitle("Okabe Ito") +
theme(plot.margin=margin(7,1.5,7,1.5))
p2<-gg_color_swatches(7) +
scale_fill_brewer(type="qual",palette="Dark2") + ggtitle("ColorBrewer Dark2") +
theme(plot.margin=margin(7,1.5,7,1.5))
p3<-gg_color_swatches(7) +
scale_fill_hue() + ggtitle("ggplot2 hue") +
theme(plot.margin=margin(7,1.5,7,1.5))
plot_grid(p1,p2,p3,ncol=1)
##### 6 Visualizing amounts: 수량 데이터의 시각화
library(forcats)
library(ggplot2)
library(tidyverse)
### 6.1 Bar plots: 막대 도표의 다양한 활용용
boxoffice <- data.frame(
rank = 1:5,
title = c("Star Wars: The Last Jedi", "Jumanji: Welcome to the Jungle", "Pitch Perfect 3", "The Greatest Showman", "Ferdinand"),
title_short = c("Star Wars", "Jumanji", "Pitch Perfect 3", "Greatest Showman", "Ferdinand"),
amount = c(71565498, 36169328, 19928525, 8805843, 7316746),
amount_text = c("$71,565,498", "$36,169,328", "$19,928,525", "$8,805,843", "$7,316,746")
)
### Figure 6.1 - 세로 막대
boxoffice %>%
ggplot(aes(x=fct_reorder(title,rank),y=amount)) + #title만 x축에 넣으면 순위를 반영 못함
geom_col(fill="#56B4E9",width=0.6,alpha=0.9) + #alpha는 투명도
scale_y_continuous(expand=c(0,0),
breaks=c(0,2e7,4e7,6e7),
labels=c("0","20","40","60"),
name="weekend gross (million USD)") +
xlab("") +
theme_light() +
theme(
panel.border=element_blank(),
panel.grid.major.x=element_blank()
)
### 예제
data_age_raw<-read.csv("data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv",fileEncoding="cp949")
### 예제
data_age_raw<-read.csv("./data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv",fileEncoding="cp949")
data_age_raw<-read.csv('./data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv')
data_age_raw<-read.csv('./data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv')
### 예제
data_age_raw<-read.csv("./data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv",fileEncoding="cp949")
### 예제
data_age_raw<-read.csv("data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv",fileEncoding="cp949")
### 예제
data_age_raw<-read.csv("/data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv",fileEncoding="cp949")
### 예제
data_age_raw<-read.csv("./data/행정안전부_지역별(법정동) 성별 연령별 주민등록 인구수_20220331.csv",fileEncoding="cp949")
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#>"
)
getwd()
library(tidyverse)
# Read csv File
ncdc_normals <- read.csv("./data/ncdc_normals.csv")
file_path <- "./data/ncdc_normals.csv"
file.exists(file_path)
# Read csv File
ncdc_normals <- read.csv("C:/Users/Hyunsoo Kim/Desktop/senior_grade/blog/my-quarto-website/Data_Visualization/data/ncdc_normals.csv")
# Read csv File
ncdc_normals <- read.csv("C:/Users/Hyunsoo Kim/Desktop/senior_grade/blog/my-quarto-website/Data_Visualization/data/ncdc_normals.csv")
# Read csv File
ncdc_normals <- read.csv("C:/Users/Hyunsoo Kim/Desktop/senior_grade/blog/my-quarto-website/Data_Visualization/data/ncdc_normals.csv")
# Read csv File
ncdc_normals <- read.csv("/data/ncdc_normals.csv")
# Read csv File
ncdc_normals <- read.csv("./Data_Visualization/data/ncdc_normals.csv")
getwd()
# Read csv File
ncdc_normals <- read.csv("./data/ncdc_normals.csv")
# Read csv File
ncdc_normals <- read.csv(".data/ncdc_normals.csv")
---
title: "Coordinate systems and axes"
```{r setup, include = FALSE}
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#>"
)
getwd()
library(tidyverse)
# Read csv File
ncdc_normals <- read.csv("./data/ncdc_normals.csv")
# station_loc Dataframe 생성
station_loc <- data.frame(
station_id = c("USW00014819", "USC00042319", "USW00093107", "USW00012918"),
location = c("Chicago", "Death Valley", "San Diego", "Houston")
)
station_loc
# Raw Data와 Inner Join
temps_long <- ncdc_normals %>% inner_join(station_loc, by = "station_id")
temps_long %>% head()
temps_long %>% sapply(class)
# Date Type Convert : Character -> Date
temps_long$date <- temps_long$date %>% as.Date("%Y-%m-%d")
getwd()
# Read csv File
ncdc_normals <- read.csv("./data/ncdc_normals.csv")
file.exists("./data/ncdc_normals.csv")
file.exists("./data/ncdc_normals.csv")
file.exists("./data")
file.exists("./data/")
# Read csv File
ncdc_normals <- read.csv("C:\Users\Hyunsoo Kim\Desktop\senior_grade\blog\my-quarto-website\Data_Visualization\data\ncdc_normals.csv")
# Read csv File
ncdc_normals <- read.csv("C:/Users/Hyunsoo Kim/Desktop/senior_grade/blog/my-quarto-website/Data_Visualization/data/ncdc_normals.csv")
# Read csv File
ncdc_normals <- system.file("data/ncdc_normals.csv")
# station_loc Dataframe 생성
station_loc <- data.frame(
station_id = c("USW00014819", "USC00042319", "USW00093107", "USW00012918"),
location = c("Chicago", "Death Valley", "San Diego", "Houston")
)
# Raw Data와 Inner Join
temps_long <- ncdc_normals %>% inner_join(station_loc, by = "station_id")
ncdc_normals
# Read csv File
ncdc_normals <- system.file("data/ncdc_normals.csv", package = "spData")
ncdc_normals
# Read csv File
ncdc_normals <- read.csv("data/ncdc_normals.csv", header = TRUE, fileEncoding = "EUC-KR")
# Read csv File
ncdc_normals <- read.csv("data/ncdc_normals.csv", header = TRUE)
# Read csv File
ncdc_normals <- read.csv("./data/ncdc_normals.csv", header = TRUE)
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#>"
)
getwd()
library(tidyverse)
# Read csv File
ncdc_normals <- read.csv("./data/ncdc_normals.csv", header = TRUE)
knitr::opts_chunk$set(
echo = TRUE,
collapse = TRUE,
comment = "#>"
)
getwd()
library(tidyverse)
# Read csv File
ncdc_normals <- read.csv("./data/ncdc_normals.csv", header = TRUE)
